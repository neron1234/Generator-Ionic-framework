// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GeneratorProject.Platforms.Frontend.Ionic
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Foundation.Jade.Models;
    using Common.Generator.Framework.Extensions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Mobioos_Ver_2.0 --10.11.19\IonicGenerator\IonicGenerator\GeneratorProject\Platforms\Frontend\Ionic\Common\Templates\src\app\AppModule.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class AppModule : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("import { NgModule, APP_INITIALIZER } from \'@angular/core\';\r\nimport { BrowserModul" +
                    "e } from \'@angular/platform-browser\';\r\nimport { RouteReuseStrategy } from \'@angu" +
                    "lar/router\';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \'@angular/comm" +
                    "on/http\';\r\n\r\nimport { IonicModule, IonicRouteStrategy } from \'@ionic/angular\';\r\n" +
                    "import { SplashScreen } from \'@ionic-native/splash-screen/ngx\';\r\nimport { Status" +
                    "Bar } from \'@ionic-native/status-bar/ngx\';\r\n\r\nimport { AppComponent } from \'./ap" +
                    "p.component\';\r\nimport { AppRoutingModule } from \'./app-routing.module\';\r\nimport " +
                    "{ RootStoreModule } from \'./store/root-store.module\';\r\n\r\nimport { AuthIntercepto" +
                    "rService } from \'./core/services/auth-interceptor.service\';\r\nimport { environmen" +
                    "t } from \'../environments/environment\';\r\n\r\nimport { WebStorageStateStore } from " +
                    "\'oidc-client\';\r\n\r\nimport { FilteringService } from \'../app/shared/pipes/filterin" +
                    "gService\';\r\nimport { SortingService } from \'../app/shared/pipes/sortingService\';" +
                    "\r\nimport { LoadingService } from \'../app/shared/services/common/loadingService\';" +
                    "\r\nimport { LoggerService } from \'../app/shared/services/common/loggerService\';\r\n" +
                    "import { OidcSecurityService } from \'../app/shared/services/auth-client/oidc-sec" +
                    "urity.service\';\r\nimport { OidcConfigurationService } from \'../app/shared/service" +
                    "s/auth-client/oidc-configuration.service\';\r\n\r\nexport function loadConfig(config:" +
                    " OidcConfigurationService) {\r\n  return () => {\r\n    config.setSettings({\r\n      " +
                    "userStore: new WebStorageStateStore({store: localStorage}),\r\n      ...environmen" +
                    "t.auth\r\n    });\r\n    return config;\r\n  };\r\n}\r\n\r\n@NgModule({\r\n   declarations: [\r" +
                    "\n    AppComponent,\r\n    FilteringService, \r\n    SortingService,\r\n  ],\r\n  entryCo" +
                    "mponents: [],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(),\r\n   " +
                    " AppRoutingModule,\r\n    RootStoreModule,\r\n    HttpClientModule\r\n  ],\r\n  provider" +
                    "s: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    LoadingService,\r\n    LoggerService," +
                    "\r\n    OidcSecurityService,\r\n    OidcConfigurationService,\r\n    { provide: RouteR" +
                    "euseStrategy, useClass: IonicRouteStrategy },\r\n     {\r\n             provide: APP" +
                    "_INITIALIZER,\r\n             useFactory: loadConfig,\r\n             deps: [OidcCon" +
                    "figurationService],\r\n             multi: true,\r\n           },\r\n       { provide:" +
                    " HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true },\r\n  ],\r\n  bo" +
                    "otstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule {}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
