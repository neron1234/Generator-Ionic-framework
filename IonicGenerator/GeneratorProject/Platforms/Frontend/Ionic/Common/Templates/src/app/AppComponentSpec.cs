// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GeneratorProject.Platforms.Frontend.Ionic
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Foundation.Jade.Models;
    using Common.Generator.Framework.Extensions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Mobioos_Ver_2.0 --10.11.19\IonicGenerator\IonicGenerator\GeneratorProject\Platforms\Frontend\Ionic\Common\Templates\src\app\AppComponentSpec.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class AppComponentSpec : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("import { CUSTOM_ELEMENTS_SCHEMA } from \'@angular/core\';\r\nimport { TestBed, async " +
                    "} from \'@angular/core/testing\';\r\n\r\nimport { IonicModule, Platform } from \'@ionic" +
                    "/angular\';\r\nimport { SplashScreen } from \'@ionic-native/splash-screen/ngx\';\r\nimp" +
                    "ort { StatusBar } from \'@ionic-native/status-bar/ngx\';\r\n\r\nimport { AppComponent " +
                    "} from \'./app.component\';\r\nimport { AppRoutingModule } from \'./app-routing.modul" +
                    "e\';\r\nimport { BrowserModule } from \'@angular/platform-browser\';\r\nimport { HttpCl" +
                    "ientTestingModule } from \'@angular/common/http/testing\';\r\nimport { RouterTesting" +
                    "Module } from \'@angular/router/testing\';\r\nimport { CommonModule } from \'@angular" +
                    "/common\';\r\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\r\n\r" +
                    "\nimport { Store } from \'@ngrx/store\';\r\nimport { StoreModule } from \'@ngrx/store\'" +
                    ";\r\n\r\ndescribe(\'AppComponent\', () => {\r\n\r\n  let statusBarSpy, splashScreenSpy, pl" +
                    "atformReadySpy, platformSpy;\r\n\r\n  beforeEach(async(() => {\r\n    statusBarSpy = j" +
                    "asmine.createSpyObj(\'StatusBar\', [\'styleDefault\']);\r\n    splashScreenSpy = jasmi" +
                    "ne.createSpyObj(\'SplashScreen\', [\'hide\']);\r\n    platformReadySpy = Promise.resol" +
                    "ve();\r\n    platformSpy = jasmine.createSpyObj(\'Platform\', { ready: platformReady" +
                    "Spy });\r\n\r\n    TestBed.configureTestingModule({\r\n      declarations: [AppCompone" +
                    "nt],\r\n      schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n      providers: [\r\n        { pr" +
                    "ovide: StatusBar, useValue: statusBarSpy },\r\n        { provide: SplashScreen, us" +
                    "eValue: splashScreenSpy },\r\n        { provide: Platform, useValue: platformSpy }" +
                    ",\r\n      ],\r\n      imports: [\r\n        FormsModule,\r\n        CommonModule,\r\n    " +
                    "    BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientTestingModule,\r" +
                    "\n        RouterTestingModule,\r\n        ReactiveFormsModule,\r\n        IonicModule" +
                    ".forRoot(),\r\n        StoreModule.forRoot({}),\r\n      ],\r\n    }).compileComponent" +
                    "s();\r\n  }));\r\n\r\n  // TODO ; Fix test\r\n  // it(\'should create the app\', () => {\r\n" +
                    "  //   const fixture = TestBed.createComponent(AppComponent);\r\n  //   const app " +
                    "= fixture.debugElement.componentInstance;\r\n  //   expect(app).toBeTruthy();\r\n  /" +
                    "/ });\r\n\r\n  // it(\'should initialize the app\', async () => {\r\n  //   TestBed.crea" +
                    "teComponent(AppComponent);\r\n  //   expect(platformSpy.ready).toHaveBeenCalled();" +
                    "\r\n  //   await platformReadySpy;\r\n  //   expect(statusBarSpy.styleDefault).toHav" +
                    "eBeenCalled();\r\n  //   expect(splashScreenSpy.hide).toHaveBeenCalled();\r\n  // })" +
                    ";\r\n\r\n  // TODO: add more tests!\r\n\r\n});\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
