// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GeneratorProject.Platforms.Frontend.Ionic
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Foundation.Jade.Models;
    using Common.Generator.Framework.Extensions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\New folder\IonicGenerator\IonicGenerator\GeneratorProject\Platforms\Frontend\Ionic\Shared\Templates\Services\CommonServices\SortingService.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class SortingService : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(@"import { Pipe, PipeTransform } from '@angular/core';

@Pipe(
  { name: 'sortingpipe' }
)

export class SortingService implements PipeTransform {
  transform(records: Array<any>, args?: any): any {

    if (args.direction === -1) {
      return records.sort(function (a, b) {
        if (a[args.property] > b[args.property]) {
          return -1;
        }
        else if (a[args.property] < b[args.property]) {
          return 1;
        }
        else {
          return 0;
        }
      });
    }

    if (args.direction === 1) {
      return records.sort(function (a, b) {
        console.log(a.CategoryID);
        if (a[args.property] < b[args.property]) {
          return -1;
        }
        else if (a[args.property] > b[args.property]) {
          return 1;
        }
        else {
          return 0;
        }
      });
    }

    return records;
  };
}



");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
