<#@ include file="..\..\..\Base\Templates\Include.tt" #>
<#
    var isGet = _layout.Actions.Where(p => p.Type.ToLower() == "dataget");
    var isNavigate = _layout.Actions.Where(p => p.Type.ToLower() == "navigation");
    var displayCount = 0;
#>
<ion-header>
  <ion-toolbar color="primary">
    <ion-buttons slot="start">
      <ion-back-button defaultHref="tabs/<#=_concern.Id.ToLower()#>"></ion-back-button>
    </ion-buttons>
    <ion-title><#=_concern.Id.ToPascalCase()#> <#=_layout.Id.ToCamelCase()#></ion-title>
<#
    if(isNavigate.Count() > 0){
#>
    <ion-button (click)="openNavigationAction()" fill="clear" color="light" slot="end">
        <ion-icon slot="icon-only" name="more"></ion-icon>
    </ion-button>
<#
    }
#>
  </ion-toolbar>
</ion-header>
 
<ion-content class="ion-padding">
<#
    foreach(var action in _layout.Actions.AsEnumerable())
    {
       if(dataProperties != null  && dataModel != null)
        {
            if(action.Type.ToLower().Equals("datacreate") && _layout.DataModel != null)
            {
                displayCount++;
                if(displayCount <= 1){
#>
    <ion-item lines="none">
        <ion-label color="dark">Create Form</ion-label>
    </ion-item>
    <form [formGroup]="<#=_layout.Title.ToCamelCase()#>Form" (ngSubmit)="on<#=action.Id.ToPascalCase()#>(<#=_layout.Title.ToCamelCase()#>Form.value)">
<#

                foreach(var property in dataProperties.AsEnumerable())
                {
                    if(!property.IsKey){
#>
        <ion-item>
            <ion-label position="floating" color="medium"><#=Helper.WordSeperator(property.Id.ToPascalCase())#></ion-label>
            <ion-input formControlName="<#=property.Id.ToCamelCase()#>"></ion-input>
        </ion-item>
<#
                        }
                }
#> 
        <ion-grid class="ion-no-padding">
<#

                foreach(var property in dataProperties.AsEnumerable())
                {
                    if(!property.IsKey){
#>
            <ion-row>
                <ion-col *ngIf="!<#=_layout.Title.ToCamelCase()#>Form.get('<#=property.Id.ToCamelCase()#>').valid && <#=_layout.Title.ToCamelCase()#>Form.get('<#=property.Id.ToCamelCase()#>').touched" class="error-message danger" class="ion-no-padding">
                    <ion-text color="danger" class="ion-text-start ion-text-wrap">
                        <p  class="ion-no-margin ion-padding-horizontal" *ngIf="<#=_layout.Title.ToCamelCase()#>Form['controls'].<#=property.Id.ToCamelCase()#>.hasError('required')">
                        <#=property.Id.ToPascalCase()#> required</p>
                    </ion-text>
                </ion-col>
            </ion-row>
<#
                        }
                }
#>      
        </ion-grid>
        <ion-button color="success" type="submit" [disabled]="!<#=_layout.Title.ToCamelCase()#>Form.valid">Create</ion-button>
    </form> 
<#
                    }
                } else if(action.Type.ToLower().Equals("dataupdate") && _layout.DataModel != null)
                    {
                 displayCount++;
                 if(displayCount <= 1){
#>
    <ion-item lines="none">
        <ion-label color="dark">Update Form</ion-label>
    </ion-item>
   <form [formGroup]="<#=_layout.Title.ToCamelCase()#>Form" (ngSubmit)="on<#=action.Id.ToPascalCase()#>()">
<#

                foreach(var property in dataProperties.AsEnumerable())
                {
                    if(!property.IsKey){
#>
        <ion-item>
            <ion-label position="floating" color="medium"><#=Helper.WordSeperator(property.Id.ToPascalCase())#></ion-label>
            <ion-input formControlName="<#=property.Id.ToCamelCase()#>"></ion-input>
        </ion-item>
<#
                        }
                }
#> 
        <ion-grid class="ion-no-padding">
<#

                foreach(var property in dataProperties.AsEnumerable())
                {
                    if(!property.IsKey){
#>
            <ion-row>
               <ion-col *ngIf="!<#=_layout.Title.ToCamelCase()#>Form.get('<#=property.Id.ToCamelCase()#>').valid && <#=_layout.Title.ToCamelCase()#>Form.get('<#=property.Id.ToCamelCase()#>').touched" class="error-message danger" class="ion-no-padding">
                   <ion-text color="danger" class="ion-text-start ion-text-wrap">
                        <p class="ion-no-margin ion-padding-horizontal" *ngIf="<#=_layout.Title.ToCamelCase()#>Form['controls'].<#=property.Id.ToCamelCase()#>.hasError('required')">
                        <#=Helper.WordSeperator(property.Id.ToPascalCase())#> required</p>
                    </ion-text>
                </ion-col>
            </ion-row>
<#
                        }
                }
#>      
        </ion-grid>
        <ion-button color="success" type="submit" [disabled]="!<#=_layout.Title.ToCamelCase()#>Form.valid">Update</ion-button>
    </form> 
<#
                    }
                } else if(action.Type.ToLower().Equals("datalist"))
                 {
                 displayCount++;
                 if(displayCount <= 1){
#>
  <div *ngIf="(<#=dataModel.Id.ToCamelCase()#>s$ | async) as <#=dataModel.Id.ToCamelCase()#>s  else no<#=dataModel.Id.ToPascalCase()#>s">
    <ion-list *ngFor="let <#=dataModel.Id.ToCamelCase()#> of <#=dataModel.Id.ToCamelCase()#>s">
      <ion-item lines="inset" (click)="methodSelectAlert(<#=dataModel.Id.ToCamelCase()#>)">
        <ion-label>
          <ion-grid>
<#
        if(dataModel != null &&  dataModel.GetLinkedProperties().AsEnumerable() != null)
         {
            foreach(var property in  dataModel.GetLinkedProperties().AsEnumerable())
            {
                if(!property.IsKey){
#>
            <ion-row>
              <ion-col size="6">
                <h2><#=Helper.WordSeperator(property.Id.ToPascalCase())#></h2>
              </ion-col>
              <ion-col size="6">
                {{<#=dataModel.Id.ToCamelCase()#>.<#=property.Id.ToCamelCase()#>}}
              </ion-col>
            </ion-row>
<#
                }
            }
        }
#>    
          </ion-grid>
        </ion-label>
      </ion-item>
    </ion-list>
  </div>
  <ng-template #no<#=dataModel.Id.ToPascalCase()#>s>
    <div>
      <ion-text color="dark" class="ion-padding ion-text-center">
        <h4>No <#=dataModel.Id.ToPascalCase()#>s to display</h4>
      </ion-text>
    </div>
  </ng-template> 
<#
                    }
               } else  if(action.Type.ToLower().Equals("dataget"))
                    {
                displayCount++;
                 if(displayCount <= 1){
#>
    <div *ngIf="(<#=dataModel.Id.ToCamelCase()#>$ | async) as <#=dataModel.Id.ToCamelCase()#>  else no<#=dataModel.Id.ToPascalCase()#>">
        <ion-list>
            <ion-item-divider>
                <ion-label>
                Employee details
                </ion-label>
            </ion-item-divider>
<#

                foreach(var property in dataProperties.AsEnumerable())
                {
                    if(!property.IsKey){
#>
            <ion-item>
                <ion-label><#=Helper.WordSeperator(property.Id.ToPascalCase())#> : {{ <#=dataModel.Id.ToCamelCase()#>.<#=property.Id.ToCamelCase()#> }}</ion-label>
            </ion-item>
<#
                        }
                }
#>
        </ion-list>  
    </div>
    <ng-template #no<#=dataModel.Id.ToPascalCase()#>>
        <div>
            <ion-text color="dark" class="ion-padding" class="ion-text-center">
                <h4>No <#=dataModel.Id.ToPascalCase()#> to display</h4>
            </ion-text>
        </div>
    </ng-template> 
<#
                    }
                 } 
            }
        }
     if(_layout.Actions.AsEnumerable().Count() > 0 )
        {
#>
    <ion-list>
        <ion-list-header>
            <ion-label>Methods</ion-label>
        </ion-list-header>
<#
                    foreach(var action in _layout.Actions.AsEnumerable())
                    {
                        if(action.Type.ToLower().Equals("method") || action.Type.ToLower().Equals("datadelete"))
                        {
#>
			<ion-item button (click)="on<#=action.Id.ToPascalCase()#>()">
				<ion-label><#=Helper.WordSeperator(action.Id.ToPascalCase())#></ion-label>
				<ion-icon name="arrow-forward"></ion-icon>
			</ion-item>
<#
                        }
                    }
#>
	</ion-list>
<#
      }
#>
</ion-content>